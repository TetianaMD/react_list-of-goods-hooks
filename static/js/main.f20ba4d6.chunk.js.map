{"version":3,"sources":["App.tsx","index.tsx"],"names":["Goods","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPrepareGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,EAAkB,iBAClBC,EAAoB,SA4BnB,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA7BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,aAEPI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAC7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAClC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAMcM,CAAgBjB,EACnC,CACEK,YACAE,iBAQJ,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,0BAA2BhB,IAAcJ,IAJ7C,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,6BAA8BhB,IAAcH,IAJhD,4BAUA,wBACEiB,QAAS,kBAAMX,GAAiBD,IAChCa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,8BAA+Bd,IAJnC,sBAUEF,GAAaE,IACb,wBACEY,QAxCM,WACdb,EAAa,IACbE,GAAgB,IAuCRY,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGT,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f20ba4d6.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const Goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Sort {\n  sortField: string;\n  reverseField: boolean;\n}\nconst SORT_FIELD_NAME = 'alphabetically';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepareGoods(\n  goods: typeof Goods,\n  { sortField, reverseField }: Sort,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1.localeCompare(good2);\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPrepareGoods(Goods,\n    {\n      sortField,\n      reverseField,\n    });\n\n  const onReset = () => {\n    setSortField('');\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'button is-info is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'button is-success is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'button is-warning is-light': !reverseField,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            onClick={onReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}